<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="TeacherMapper">
	<resultMap id="teacherMap" type="teacher">
		<id column="tea_id" property="teaId" jdbcType="INTEGER" />
		<result column="tno" property="tno" jdbcType="VARCHAR" />
		<result column="tea_name" property="teaName" jdbcType="VARCHAR" />
		<result column="tea_sex" property="teaSex" jdbcType="CHAR" />
		<result column="id_card" property="idCard" jdbcType="VARCHAR" />
		<result column="professional" property="professional" jdbcType="VARCHAR" />
		<result column="degree" property="degree" jdbcType="VARCHAR" />
		<result column="bz" property="bz" jdbcType="VARCHAR" />
		<result column="postal_code" property="postalCode" jdbcType="VARCHAR" />
		<result column="address" property="address" jdbcType="VARCHAR" />
		<result column="phone" property="phone" jdbcType="VARCHAR" />
		<result column="email" property="email" jdbcType="VARCHAR" />
		<result column="created_by" property="createdBy" jdbcType="VARCHAR" />
		<result column="creation_date" property="creationDate"
			jdbcType="TIMESTAMP" />
		<result column="last_update_by" property="lastUpdateBy"
			jdbcType="VARCHAR" />
		<result column="last_update_date" property="lastUpdateDate"
			jdbcType="TIMESTAMP" />
	</resultMap>
	<sql id="Base_Column_List">
		tea_id, tno, tea_name, tea_sex, id_card, professional, degree, bz,
		postal_code, address,
		phone, email, created_by, creation_date, last_update_by, last_update_date
	</sql>
	<select id="selectByPrimaryKey" resultMap="teacherMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from teacher
		where tea_id = #{teaId,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from teacher
		where tea_id = #{teaId,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="com.sms.entity.Teacher">
		insert into teacher (tea_id, tno, tea_name,
		tea_sex, id_card, professional,
		degree, bz, postal_code,
		address, phone, email,
		created_by, creation_date, last_update_by,
		last_update_date)
		values (#{teaId,jdbcType=INTEGER}, #{tno,jdbcType=VARCHAR},
		#{teaName,jdbcType=VARCHAR},
		#{teaSex,jdbcType=CHAR}, #{idCard,jdbcType=VARCHAR}, #{professional,jdbcType=VARCHAR},
		#{degree,jdbcType=VARCHAR}, #{bz,jdbcType=VARCHAR},
		#{postalCode,jdbcType=VARCHAR},
		#{address,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR},
		#{createdBy,jdbcType=VARCHAR}, #{creationDate,jdbcType=TIMESTAMP},
		#{lastUpdateBy,jdbcType=VARCHAR},
		#{lastUpdateDate,jdbcType=TIMESTAMP})
	</insert>
	<insert id="insertSelective" parameterType="com.sms.entity.Teacher">
		insert into teacher
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="teaId != null">
				tea_id,
			</if>
			<if test="tno != null">
				tno,
			</if>
			<if test="teaName != null">
				tea_name,
			</if>
			<if test="teaSex != null">
				tea_sex,
			</if>
			<if test="idCard != null">
				id_card,
			</if>
			<if test="professional != null">
				professional,
			</if>
			<if test="degree != null">
				degree,
			</if>
			<if test="bz != null">
				bz,
			</if>
			<if test="postalCode != null">
				postal_code,
			</if>
			<if test="address != null">
				address,
			</if>
			<if test="phone != null">
				phone,
			</if>
			<if test="email != null">
				email,
			</if>
			<if test="createdBy != null">
				created_by,
			</if>
			<if test="creationDate != null">
				creation_date,
			</if>
			<if test="lastUpdateBy != null">
				last_update_by,
			</if>
			<if test="lastUpdateDate != null">
				last_update_date,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="teaId != null">
				0,
			</if>
			<if test="tno != null">
				#{tno},
			</if>
			<if test="teaName != null">
				#{teaName},
			</if>
			<if test="teaSex != null">
				#{sex},
			</if>
			<if test="idCard != null">
				#{idCard},
			</if>
			<if test="professional != null">
				#{professional},
			</if>
			<if test="degree != null">
				#{degree},
			</if>
			<if test="bz != null">
				#{bz},
			</if>
			<if test="postalCode != null">
				#{postalCode},
			</if>
			<if test="address != null">
				#{address},
			</if>
			<if test="phone != null">
				#{phone},
			</if>
			<if test="email != null">
				#{email},
			</if>
			<if test="createdBy != null">
				#{createdBy},
			</if>
			<if test="creationDate != null">
				#{creationDate},
			</if>
			<if test="lastUpdateBy != null">
				#{lastUpdateBy},
			</if>
			<if test="lastUpdateDate != null">
				#{lastUpdateDate},
			</if>
		</trim>
	</insert>
	<update id="updateByTno" parameterType="com.sms.entity.Teacher">
		update teacher
		<set>
			<if test="teaName != null">
				tea_name = #{teaName,jdbcType=VARCHAR},
			</if>
			<if test="teaSex != null">
				tea_sex = #{teaSex,jdbcType=CHAR},
			</if>
			<if test="idCard != null">
				id_card = #{idCard,jdbcType=VARCHAR},
			</if>
			<if test="professional != null">
				professional = #{professional,jdbcType=VARCHAR},
			</if>
			<if test="degree != null">
				degree = #{degree,jdbcType=VARCHAR},
			</if>
			<if test="bz != null">
				bz = #{bz,jdbcType=VARCHAR},
			</if>
			<if test="postalCode != null">
				postal_code = #{postalCode,jdbcType=VARCHAR},
			</if>
			<if test="address != null">
				address = #{address,jdbcType=VARCHAR},
			</if>
			<if test="phone != null">
				phone = #{phone,jdbcType=VARCHAR},
			</if>
			<if test="email != null">
				email = #{email,jdbcType=VARCHAR},
			</if>
			<if test="createdBy != null">
				created_by = #{createdBy,jdbcType=VARCHAR},
			</if>
			<if test="creationDate != null">
				creation_date = #{creationDate,jdbcType=TIMESTAMP},
			</if>
			<if test="lastUpdateBy != null">
				last_update_by = #{lastUpdateBy,jdbcType=VARCHAR},
			</if>
			<if test="lastUpdateDate != null">
				last_update_date = #{lastUpdateDate,jdbcType=TIMESTAMP},
			</if>
		</set>
		where tno = #{tno}
	</update>
	<!-- 根据教工号查询教师名称 -->
	<select id="findTeaNameByTno" resultMap="teacherMap">
		select tea_name from teacher where tno = #{tno}
	</select>
	
	<!--验证教工号的唯一性 -->
	<select id="validateTnoUq" resultType="Integer">
		select count(tea_id) from teacher where tno = #{tno}
	</select>
	
	<!-- 查询所有教师 -->
	<select id="findAll" resultMap="teacherMap">
		select tea_id,tea_name from teacher
	</select>
	<!-- 查询所有教师 -->
	<select id="findByTno" resultMap="teacherMap">
		select * from teacher where tno = #{tno}
	</select>

</mapper>